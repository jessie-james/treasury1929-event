# AI Agent: Implement These Bug Fixes

## **INSTRUCTIONS: Execute these fixes in the exact order shown**

### Step 1: Clear Vite Cache (30 seconds)
**Execute this terminal command:**
```bash
rm -rf node_modules/.vite
npm run dev
```

---

### Step 2: Fix Auth Query Hook (2 minutes)
**Open file:** `client/src/hooks/use-auth.tsx`  
**Replace lines 26-38 with this exact code:**

```typescript
const { data: user, error, isLoading } = useQuery<User | null>({
  queryKey: ["/api/user"],
  queryFn: async () => {
    try {
      const res = await fetch('/api/user', {
        method: 'GET',
        credentials: 'include',
        headers: { 'Accept': 'application/json' }
      });
      
      if (res.status === 401 || res.status === 204) {
        return null;
      }
      
      if (!res.ok) {
        console.warn(`Auth query failed with status ${res.status}`);
        return null;
      }
      
      return await res.json();
    } catch (error) {
      console.warn('Auth query error:', error);
      return null;
    }
  },
  retry: false,
  refetchOnWindowFocus: false,
  refetchOnMount: false,
  staleTime: 5 * 60 * 1000,
});
```

---

### Step 3: Fix Server Auth Endpoint (1 minute)
**Open file:** `server/auth.ts`  
**Find the `/api/user` endpoint (around lines 365-400) and replace it with this exact code:**

```typescript
app.get("/api/user", (req, res) => {
  if (req.isAuthenticated() && req.user) {
    const userObj = { ...req.user };
    if ('password' in userObj) {
      delete userObj.password;
    }
    return res.json(userObj);
  }
  
  // Return 204 instead of 401 to prevent unhandled promise rejections
  return res.status(204).send();
});
```

---

## **VERIFY YOUR FIXES WORKED**

After completing all three steps above:

1. **Restart your development server**
2. **Open browser DevTools console**
3. **Navigate around your application**
4. **Confirm you see ZERO unhandled promise rejection errors**

---

## **OPTIONAL: Add Error Boundary for Extra Stability (5 minutes)**

**Create this new file:** `client/src/components/ErrorBoundary.tsx`

```typescript
import React, { Component, ReactNode } from 'react';

interface Props {
  children: ReactNode;
  fallback?: ReactNode;
}

interface State {
  hasError: boolean;
  error?: Error;
}

export class ErrorBoundary extends Component<Props, State> {
  constructor(props: Props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error: Error): State {
    return { hasError: true, error };
  }

  componentDidCatch(error: Error, errorInfo: any) {
    console.error('Error Boundary caught an error:', error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return this.props.fallback || (
        <div className="flex items-center justify-center min-h-screen">
          <div className="text-center">
            <h2 className="text-xl font-semibold mb-2">Something went wrong</h2>
            <p className="text-muted-foreground mb-4">Please refresh the page</p>
            <button 
              onClick={() => window.location.reload()} 
              className="px-4 py-2 bg-primary text-primary-foreground rounded"
            >
              Refresh Page
            </button>
          </div>
        </div>
      );
    }

    return this.props.children;
  }
}
```

**Then update this file:** `client/src/App.tsx`  
**Wrap your App component with the ErrorBoundary:**

```typescript
import { ErrorBoundary } from './components/ErrorBoundary';

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <ErrorBoundary>
        <AuthProvider>
          <Router />
          <Toaster />
        </AuthProvider>
      </ErrorBoundary>
    </QueryClientProvider>
  );
}
```

---

## **EXECUTE IN THIS ORDER**

1. âœ… **Step 1**: Clear Vite cache
2. âœ… **Step 2**: Update auth hook  
3. âœ… **Step 3**: Update server endpoint
4. âœ… **Verify**: Test the fixes worked
5. ðŸŽ¯ **Optional**: Add Error Boundary

**Expected result: Zero console errors, stable authentication, working application**

## **REPORT BACK**
After completing these steps, confirm:
- [ ] Vite cache cleared and server restarted
- [ ] Auth hook updated in use-auth.tsx
- [ ] Server endpoint updated in auth.ts  
- [ ] No more unhandled promise rejections in console
- [ ] Application running smoothly